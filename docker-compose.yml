version: '3'

services:

  app:
    build: .
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    env_file:
      - test.env
    command: "tail -f /dev/null"
    depends_on:
      - setup_app

  test:
    build: .
    volumes:
      - .:/app
    environment:
      RAILS_ENV: test
      SERVER: launch
      ROOMS_DB_DATABASE: rooms_test
      TEST_CLUSTER_COMMAND: '/usr/share/elasticsearch/bin/elasticsearch'
      TEST_CLUSTER_PARAMS: '-Des.default.path.conf=/usr/share/elasticsearch/config/ -Des.default.path.logs=/var/log/elasticsearch/'
    env_file:
      - test.env
    command: "tail -f /dev/null"
    depends_on:
      - setup_test
    volumes:
      - es:/usr/share/elasticsearch

  setup_test:
    build: .
    volumes:
      - .:/app
    environment:
      RAILS_ENV: test
      SERVER: launch
      ROOMS_DB_DATABASE: rooms_test
    env_file:
      - test.env
    command: bash -c "sleep 5; rake db:setup"
    # command: >
      # bash -c "sleep 5; rake db:setup"
      # && rake environment elasticsearch:import:model CLASS='Room' FORCE=true
      # && rake environment elasticsearch:import:model CLASS='Reservation' FORCE=true"
    depends_on:
      - db

  setup_app:
    build: .
    volumes:
      - .:/app
    env_file:
      - test.env
    command: >
      bash -c "sleep 5; rake db:setup
      && rake environment elasticsearch:import:model CLASS='Room' FORCE=true
      && rake environment elasticsearch:import:model CLASS='Reservation' FORCE=true"
    depends_on:
      - db

  db:
    image: library/mysql:5.6.22
    expose:
      - "3306"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    depends_on:
      - elasticsearch

  elasticsearch:
    image: elasticsearch:2.4.3
    ports:
      - "9200:9200"
    volumes:
      - es:/usr/share/elasticsearch

volumes:
  es:
